{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nconst API_URL = 'http://localhost:3000/';\nconst axiosInstance = axios.create({\n  baseURL: API_URL\n});\nconst axiosInstancePatch = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include'\n});\n\n// Обновить аватар\nexport async function updateProfileMainInfoAvatarApi(payload) {\n  try {\n    const response = await axiosInstancePatch.patch('users/avatar', payload, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    await store.dispatch('auth/auth');\n    console.log(response);\n    return response;\n  } catch (err) {\n    console.log(err);\n    // alert(err.message)\n  }\n}\n\n// Обновить текстовые данные\nexport async function updateProfileMainInfoTextsApi(payload) {\n  try {\n    const response = await axiosInstancePatch.patch('users/update', payload, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    });\n    await store.dispatch('auth/auth');\n    console.log(response);\n    return response;\n  } catch (err) {\n    console.log(err);\n    // alert(err.message)\n  }\n}\n\nexport async function updateProfileAboutMeApi(payload) {\n  try {\n    const response = await axiosInstancePatch.patch('users/update/aboutme', payload, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    });\n    await store.dispatch('auth/auth');\n    console.log(response);\n    return response;\n  } catch (err) {\n    console.log(err);\n    // alert(err.message)\n  }\n}\n\n// Получение информации о пользователе\nexport async function getUserProfileApi(id) {\n  try {\n    const response = await axiosInstance.get('users/information/' + id);\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    // alert(err.message)\n  }\n}\n\n// Получение услуг пользователя\nexport async function getUserServicesApi(id) {\n  try {\n    const response = await axiosInstance.get('users/products/' + id);\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    // alert(err.message)\n  }\n}","map":{"version":3,"names":["axios","store","API_URL","axiosInstance","create","baseURL","axiosInstancePatch","withCredentials","credentials","updateProfileMainInfoAvatarApi","payload","response","patch","headers","dispatch","console","log","err","updateProfileMainInfoTextsApi","updateProfileAboutMeApi","getUserProfileApi","id","get","data","getUserServicesApi"],"sources":["C:/Users/SAK/Desktop/Обмен услуг/frontend/src/services/users_service.js"],"sourcesContent":["import axios from 'axios'\nimport store from '@/store'\n\nconst API_URL = 'http://localhost:3000/'\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL\n})\n\nconst axiosInstancePatch = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include'\n})\n\n// Обновить аватар\nexport async function updateProfileMainInfoAvatarApi (payload) {\n  try {\n    const response = await axiosInstancePatch.patch('users/avatar', payload, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    await store.dispatch('auth/auth')\n    console.log(response)\n    return response\n  } catch (err) {\n    console.log(err)\n    // alert(err.message)\n  }\n}\n\n// Обновить текстовые данные\nexport async function updateProfileMainInfoTextsApi (payload) {\n  try {\n    const response = await axiosInstancePatch.patch('users/update', payload, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    })\n    await store.dispatch('auth/auth')\n    console.log(response)\n    return response\n  } catch (err) {\n    console.log(err)\n    // alert(err.message)\n  }\n}\n\nexport async function updateProfileAboutMeApi (payload) {\n  try {\n    const response = await axiosInstancePatch.patch('users/update/aboutme', payload, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    })\n    await store.dispatch('auth/auth')\n    console.log(response)\n    return response\n  } catch (err) {\n    console.log(err)\n    // alert(err.message)\n  }\n}\n\n// Получение информации о пользователе\nexport async function getUserProfileApi (id) {\n  try {\n    const response = await axiosInstance.get('users/information/' + id)\n    console.log(response)\n    return response.data\n  } catch (err) {\n    console.log(err)\n    // alert(err.message)\n  }\n}\n\n// Получение услуг пользователя\nexport async function getUserServicesApi (id) {\n  try {\n    const response = await axiosInstance.get('users/products/' + id)\n    console.log(response.data)\n    return response.data\n  } catch (err) {\n    console.log(err)\n    // alert(err.message)\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,OAAO,GAAG,wBAAwB;AAExC,MAAMC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,MAAMI,kBAAkB,GAAGN,KAAK,CAACI,MAAM,CAAC;EACtCC,OAAO,EAAEH,OAAO;EAChBK,eAAe,EAAE,IAAI;EACrBC,WAAW,EAAE;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,eAAeC,8BAA8BA,CAAEC,OAAO,EAAE;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,kBAAkB,CAACM,KAAK,CAAC,cAAc,EAAEF,OAAO,EAAE;MACvEG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMZ,KAAK,CAACa,QAAQ,CAAC,WAAW,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChB;EACF;AACF;;AAEA;AACA,OAAO,eAAeC,6BAA6BA,CAAER,OAAO,EAAE;EAC5D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,kBAAkB,CAACM,KAAK,CAAC,cAAc,EAAEF,OAAO,EAAE;MACvEG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMZ,KAAK,CAACa,QAAQ,CAAC,WAAW,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChB;EACF;AACF;;AAEA,OAAO,eAAeE,uBAAuBA,CAAET,OAAO,EAAE;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,kBAAkB,CAACM,KAAK,CAAC,sBAAsB,EAAEF,OAAO,EAAE;MAC/EG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMZ,KAAK,CAACa,QAAQ,CAAC,WAAW,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChB;EACF;AACF;;AAEA;AACA,OAAO,eAAeG,iBAAiBA,CAAEC,EAAE,EAAE;EAC3C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMR,aAAa,CAACmB,GAAG,CAAC,oBAAoB,GAAGD,EAAE,CAAC;IACnEN,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACrB,OAAOA,QAAQ,CAACY,IAAI;EACtB,CAAC,CAAC,OAAON,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChB;EACF;AACF;;AAEA;AACA,OAAO,eAAeO,kBAAkBA,CAAEH,EAAE,EAAE;EAC5C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMR,aAAa,CAACmB,GAAG,CAAC,iBAAiB,GAAGD,EAAE,CAAC;IAChEN,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACY,IAAI,CAAC;IAC1B,OAAOZ,QAAQ,CAACY,IAAI;EACtB,CAAC,CAAC,OAAON,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}