{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-15d1cdce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    disabled: $setup.isDisabled,\n    class: _normalizeClass({\n      disabled: $setup.isDisabled\n    })\n  }, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], 10 /* CLASS, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","disabled","$setup","isDisabled","class","_normalizeClass","_renderSlot","_ctx","$slots","undefined"],"sources":["C:\\Users\\SAK\\Desktop\\Обмен услуг\\frontend\\src\\components\\UI\\ValidatorButton.vue"],"sourcesContent":["<template>\n  <button :disabled=\"isDisabled\"\n          :class=\"{ disabled: isDisabled }\">\n    <slot></slot>\n  </button>\n</template>\n\n<script>\nimport { useIsFormDirty, useIsFormValid } from 'vee-validate'\nimport { computed } from 'vue'\nexport default {\n  setup () {\n    const isDirty = useIsFormDirty()\n    const isValid = useIsFormValid()\n\n    const isDisabled = computed(() => {\n      return !isDirty.value || !isValid.value\n    })\n\n    return {\n      isDisabled\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.disabled {\n  pointer-events: none;\n  opacity: 0.5;\n\n  &:hover {\n    filter: brightness(1);\n  }\n}\n</style>\n"],"mappings":";;;;uBACEA,mBAAA,CAGS;IAHAC,QAAQ,EAAEC,MAAA,CAAAC,UAAU;IACpBC,KAAK,EAAAC,eAAA;MAAAJ,QAAA,EAAcC,MAAA,CAAAC;IAAU;MACpCG,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q"},"metadata":{},"sourceType":"module","externalDependencies":[]}