{"ast":null,"code":"import homeRoutes from '@/router/modules/home';\nimport authRoutes from '@/router/modules/auth';\nimport userRoutes from '@/router/modules/users';\nimport clientsRoutes from '@/router/modules/clients';\nimport servicesRoutes from '@/router/modules/services';\nimport errorRoutes from '@/router/modules/errors';\nimport recordsRoutes from '@/router/modules/records';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport store from '@/store';\nconst routes = [...homeRoutes, ...authRoutes, ...userRoutes, ...clientsRoutes, ...servicesRoutes, ...errorRoutes, ...recordsRoutes];\nconst router = createRouter({\n  routes,\n  history: createWebHistory(process.env.BASE_URL)\n});\nrouter.beforeEach(async (to, from, next) => {\n  await store.dispatch('auth/auth');\n  const loggedIn = store.getters['auth/getLoggedIn'];\n  if (!to.meta.middleware) {\n    return next();\n  }\n  if (to.name !== 'login' && to.name !== 'register' && !loggedIn) return next({\n    name: 'login'\n  });else if ((to.name === 'login' || to.name === 'register') && loggedIn) return next({\n    name: 'home'\n  });else return next();\n});\nexport default router;","map":{"version":3,"names":["homeRoutes","authRoutes","userRoutes","clientsRoutes","servicesRoutes","errorRoutes","recordsRoutes","createRouter","createWebHistory","store","routes","router","history","process","env","BASE_URL","beforeEach","to","from","next","dispatch","loggedIn","getters","meta","middleware","name"],"sources":["C:/Users/SAK/Desktop/Обмен услуг/frontend/src/router/router.js"],"sourcesContent":["import homeRoutes from '@/router/modules/home'\nimport authRoutes from '@/router/modules/auth'\nimport userRoutes from '@/router/modules/users'\nimport clientsRoutes from '@/router/modules/clients'\nimport servicesRoutes from '@/router/modules/services'\nimport errorRoutes from '@/router/modules/errors'\nimport recordsRoutes from '@/router/modules/records'\n\nimport { createRouter, createWebHistory } from 'vue-router'\nimport store from '@/store'\n\nconst routes = [\n  ...homeRoutes,\n  ...authRoutes,\n  ...userRoutes,\n  ...clientsRoutes,\n  ...servicesRoutes,\n  ...errorRoutes,\n  ...recordsRoutes\n]\n\nconst router = createRouter({\n  routes,\n  history: createWebHistory(process.env.BASE_URL)\n})\n\nrouter.beforeEach(async (to, from, next) => {\n  await store.dispatch('auth/auth')\n  const loggedIn = store.getters['auth/getLoggedIn']\n\n  if (!to.meta.middleware) {\n    return next()\n  }\n  if (to.name !== 'login' && to.name !== 'register' && !loggedIn) return next({ name: 'login' })\n  else if ((to.name === 'login' || to.name === 'register') && loggedIn) return next({ name: 'home' })\n  else return next()\n})\n\nexport default router\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,aAAa,MAAM,0BAA0B;AAEpD,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAG,CACb,GAAGV,UAAU,EACb,GAAGC,UAAU,EACb,GAAGC,UAAU,EACb,GAAGC,aAAa,EAChB,GAAGC,cAAc,EACjB,GAAGC,WAAW,EACd,GAAGC,aAAa,CACjB;AAED,MAAMK,MAAM,GAAGJ,YAAY,CAAC;EAC1BG,MAAM;EACNE,OAAO,EAAEJ,gBAAgB,CAACK,OAAO,CAACC,GAAG,CAACC,QAAQ;AAChD,CAAC,CAAC;AAEFJ,MAAM,CAACK,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,MAAMV,KAAK,CAACW,QAAQ,CAAC,WAAW,CAAC;EACjC,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,OAAO,CAAC,kBAAkB,CAAC;EAElD,IAAI,CAACL,EAAE,CAACM,IAAI,CAACC,UAAU,EAAE;IACvB,OAAOL,IAAI,CAAC,CAAC;EACf;EACA,IAAIF,EAAE,CAACQ,IAAI,KAAK,OAAO,IAAIR,EAAE,CAACQ,IAAI,KAAK,UAAU,IAAI,CAACJ,QAAQ,EAAE,OAAOF,IAAI,CAAC;IAAEM,IAAI,EAAE;EAAQ,CAAC,CAAC,MACzF,IAAI,CAACR,EAAE,CAACQ,IAAI,KAAK,OAAO,IAAIR,EAAE,CAACQ,IAAI,KAAK,UAAU,KAAKJ,QAAQ,EAAE,OAAOF,IAAI,CAAC;IAAEM,IAAI,EAAE;EAAO,CAAC,CAAC,MAC9F,OAAON,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}