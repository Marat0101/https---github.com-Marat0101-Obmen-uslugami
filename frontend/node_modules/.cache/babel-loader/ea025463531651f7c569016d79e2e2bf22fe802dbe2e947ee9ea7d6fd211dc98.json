{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport AppImage from '@/components/UI/InteractiveImage.vue';\nimport { updateProfileMainInfoAvatarApi, updateProfileMainInfoTextsApi } from '@/services/users_service';\nimport store from '@/store';\nimport AppPrimaryBtn from '@/components/UI/AppPrimaryButton.vue';\nimport AppForm from '@/components/AppForm.vue';\nimport AppVerticalTabs from '@/components/UI/AppVerticalTabs.vue';\nimport AppInput from '@/components/UI/AppInput.vue';\nimport InputRows from '@/components/UI/InputRows.vue';\nconst formTextsAreDifferent = (form, defaultForm) => {\n  return Object.keys(form.texts).some(field => form.texts[field] !== defaultForm.texts[field]);\n};\nexport default {\n  name: 'EditProfile',\n  components: {\n    InputRows,\n    AppInput,\n    AppVerticalTabs,\n    AppForm,\n    AppPrimaryBtn,\n    InteractiveImage: AppImage\n  },\n  data() {\n    return {\n      tabs: [{\n        name: 'mainInformation',\n        label: 'Основная информация'\n      }, {\n        name: 'aboutMe',\n        label: 'Обо мне'\n      }, {\n        name: 'url',\n        label: 'В интернете'\n      }, {\n        name: 'exp',\n        label: 'Опыт работы'\n      }, {\n        name: 'account',\n        label: 'Управление аккаунтом'\n      }],\n      // selectedTab: this.tabs[0],\n      selectedTab: {\n        name: 'mainInformation',\n        label: 'Основная информация'\n      },\n      forms: {\n        mainInformation: {\n          texts: {\n            name: store.getters['auth/getUserProfile'].name,\n            email: store.getters['auth/getUserProfile'].email\n          },\n          image: null\n        },\n        aboutMe: {\n          texts: {\n            section: 'Название раздела 1',\n            desc: 'Описание 1'\n          }\n        }\n      },\n      changesSubmitted: false,\n      previewImage: store.getters['auth/getUserProfile'].image\n    };\n  },\n  computed: {\n    ...mapGetters('auth', ['getUserProfile']),\n    defaultForms() {\n      return {\n        mainInformation: {\n          texts: {\n            name: store.getters['auth/getUserProfile'].name,\n            email: store.getters['auth/getUserProfile'].email\n          },\n          image: store.getters['auth/getUserProfile'].image\n        },\n        aboutMe: {\n          texts: {\n            section: 'Название раздела 1',\n            desc: 'Описание 1'\n          }\n        }\n      };\n    },\n    profileIsChanged() {\n      return this.mainInformationAvatarIsChanged || this.mainInformationTextAreChanged || this.aboutMeChanged;\n    },\n    mainInformationAvatarIsChanged() {\n      return this.forms.mainInformation.image !== null;\n    },\n    mainInformationTextAreChanged() {\n      return formTextsAreDifferent(this.forms.mainInformation, this.defaultForms.mainInformation);\n    },\n    aboutMeChanged() {\n      return formTextsAreDifferent(this.forms.aboutMe, this.defaultForms.aboutMe);\n    }\n  },\n  mounted() {},\n  methods: {\n    saveProfile() {\n      if (this.mainInformationTextAreChanged) {\n        updateProfileMainInfoTextsApi(JSON.stringify(this.forms.mainInformation.texts));\n      }\n      if (this.mainInformationAvatarIsChanged) {\n        const formData = new FormData();\n        formData.append('picture', this.forms.mainInformation.image);\n        updateProfileMainInfoAvatarApi(formData);\n        this.forms.mainInformation.image = null;\n      }\n      if (this.aboutMeChanged) {\n        console.log('Тут должна быть логика обновления AboutMe');\n      }\n    },\n    changeTab(tab) {\n      this.selectedTab = tab;\n    },\n    uploadImage(e) {\n      const image = e.target.files[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(image);\n      reader.onload = e => {\n        this.previewImage = e.target.result;\n      };\n      this.forms.mainInformation.image = image;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","AppImage","updateProfileMainInfoAvatarApi","updateProfileMainInfoTextsApi","store","AppPrimaryBtn","AppForm","AppVerticalTabs","AppInput","InputRows","formTextsAreDifferent","form","defaultForm","Object","keys","texts","some","field","name","components","InteractiveImage","data","tabs","label","selectedTab","forms","mainInformation","getters","email","image","aboutMe","section","desc","changesSubmitted","previewImage","computed","defaultForms","profileIsChanged","mainInformationAvatarIsChanged","mainInformationTextAreChanged","aboutMeChanged","mounted","methods","saveProfile","JSON","stringify","formData","FormData","append","console","log","changeTab","tab","uploadImage","e","target","files","reader","FileReader","readAsDataURL","onload","result"],"sources":["C:\\Users\\SAK\\Desktop\\Обмен услуг\\frontend\\src\\pages\\users\\EditProfilePageExtended.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <header>\n      <router-link to=\"/profile\">\n        <i class=\"icon pi pi-arrow-left\" style=\"margin-right: 12px;\"></i>\n        <span>Назад в профиль</span>\n      </router-link>\n    </header>\n\n    <section class=\"content-block\">\n      <AppVerticalTabs :names=\"tabs\"\n                       :selectedTab=\"selectedTab\"\n                       @changeTab=\"changeTab\">\n      </AppVerticalTabs>\n\n      <div class=\"content-block__right\">\n        <div class=\"tab-content\">\n\n          <div id=\"main-information\" v-show=\"selectedTab.name === 'mainInformation'\">\n            <AppForm>\n              <div class=\"form__inputs\">\n                <div class=\"form__inputs__avatar\" style=\"margin-right: 20px;\">\n                  <label for=\"avatar\">\n                    <InteractiveImage :src=\"previewImage\"\n                                      :interactiveText=\"'Загрузить фото'\"\n                                      class=\"avatar__image\" />\n                  </label>\n                  <input\n                    id=\"avatar\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    @change=uploadImage\n                    style=\"display: none\">\n                </div>\n\n                <InputRows>\n                  <div class=\"input-row\">\n                    <AppInput v-model=\"forms.mainInformation.texts.name\"\n                              :type=\"`text`\"\n                              :name=\"`name`\"\n                              :rules=\"`required|min:4`\"\n                              :placeholder=\"`Имя`\">\n                    </AppInput>\n                  </div>\n                  <!--                  <div class=\"input-row\">-->\n                  <!--                    <AppInput v-model=\"form.texts.email\"-->\n                  <!--                              :type=\"`text`\"-->\n                  <!--                              :name=\"`email`\"-->\n                  <!--                              :rules=\"`required|email`\"-->\n                  <!--                              :placeholder=\"`Email`\">-->\n                  <!--                    </AppInput>-->\n                  <!--                  </div>-->\n                </InputRows>\n              </div>\n            </AppForm>\n          </div>\n\n          <div v-if=\"selectedTab.name === 'aboutMe'\">\n            <AppForm>\n              <div class=\"form__inputs\">\n                <InputRows>\n                  <div class=\"input-row\">\n                    <AppInput v-model=\"forms.aboutMe.texts.section\"\n                              :type=\"`text`\"\n                              :name=\"`section`\"\n                              :rules=\"`required|min:4`\"\n                              :placeholder=\"`Название раздела`\">\n                    </AppInput>\n                  </div>\n                </InputRows>\n              </div>\n            </AppForm>\n          </div>\n\n          <div v-if=\"selectedTab.name === 'url'\">\n            Здесь должны были быть поля.\n          </div>\n\n          <div v-if=\"selectedTab.name === 'exp'\">\n            Здесь должны были быть поля.\n          </div>\n\n          <div v-if=\"selectedTab.name === 'account'\">\n            Здесь должны были быть поля.\n          </div>\n        </div>\n\n        <div class=\"form__btns\" style=\"margin-top: 20px;\">\n          <AppPrimaryBtn\n            @click=\"saveProfile\"\n            :disabled=\"!profileIsChanged\"\n            :class=\"{ disabled: !profileIsChanged }\"\n          >Отправить\n          </AppPrimaryBtn>\n        </div>\n      </div>\n\n    </section>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport AppImage from '@/components/UI/InteractiveImage.vue'\nimport { updateProfileMainInfoAvatarApi, updateProfileMainInfoTextsApi } from '@/services/users_service'\nimport store from '@/store'\nimport AppPrimaryBtn from '@/components/UI/AppPrimaryButton.vue'\nimport AppForm from '@/components/AppForm.vue'\nimport AppVerticalTabs from '@/components/UI/AppVerticalTabs.vue'\nimport AppInput from '@/components/UI/AppInput.vue'\nimport InputRows from '@/components/UI/InputRows.vue'\n\nconst formTextsAreDifferent = (form, defaultForm) => {\n  return Object.keys(form.texts).some(field => form.texts[field] !== defaultForm.texts[field])\n}\n\nexport default {\n  name: 'EditProfile',\n  components: { InputRows, AppInput, AppVerticalTabs, AppForm, AppPrimaryBtn, InteractiveImage: AppImage },\n  data () {\n    return {\n      tabs: [\n        { name: 'mainInformation', label: 'Основная информация' },\n        { name: 'aboutMe', label: 'Обо мне' },\n        { name: 'url', label: 'В интернете' },\n        { name: 'exp', label: 'Опыт работы' },\n        { name: 'account', label: 'Управление аккаунтом' }\n      ],\n      // selectedTab: this.tabs[0],\n      selectedTab: { name: 'mainInformation', label: 'Основная информация' },\n      forms: {\n        mainInformation: {\n          texts: {\n            name: store.getters['auth/getUserProfile'].name,\n            email: store.getters['auth/getUserProfile'].email\n          },\n          image: null\n        },\n        aboutMe: {\n          texts: {\n            section: 'Название раздела 1',\n            desc: 'Описание 1'\n          }\n        }\n      },\n      changesSubmitted: false,\n      previewImage: store.getters['auth/getUserProfile'].image\n    }\n  },\n  computed: {\n    ...mapGetters('auth', ['getUserProfile']),\n    defaultForms () {\n      return {\n        mainInformation: {\n          texts: {\n            name: store.getters['auth/getUserProfile'].name,\n            email: store.getters['auth/getUserProfile'].email\n          },\n          image: store.getters['auth/getUserProfile'].image\n        },\n        aboutMe: {\n          texts: {\n            section: 'Название раздела 1',\n            desc: 'Описание 1'\n          }\n        }\n      }\n    },\n    profileIsChanged () {\n      return this.mainInformationAvatarIsChanged || this.mainInformationTextAreChanged ||\n        this.aboutMeChanged\n    },\n    mainInformationAvatarIsChanged () {\n      return this.forms.mainInformation.image !== null\n    },\n    mainInformationTextAreChanged () {\n      return formTextsAreDifferent(this.forms.mainInformation, this.defaultForms.mainInformation)\n    },\n    aboutMeChanged () {\n      return formTextsAreDifferent(this.forms.aboutMe, this.defaultForms.aboutMe)\n    }\n  },\n  mounted () {\n  },\n  methods: {\n    saveProfile () {\n      if (this.mainInformationTextAreChanged) {\n        updateProfileMainInfoTextsApi(JSON.stringify(this.forms.mainInformation.texts))\n      }\n      if (this.mainInformationAvatarIsChanged) {\n        const formData = new FormData()\n        formData.append('picture', this.forms.mainInformation.image)\n        updateProfileMainInfoAvatarApi(formData)\n        this.forms.mainInformation.image = null\n      }\n      if (this.aboutMeChanged) {\n        console.log('Тут должна быть логика обновления AboutMe')\n      }\n    },\n    changeTab (tab) {\n      this.selectedTab = tab\n    },\n    uploadImage (e) {\n      const image = e.target.files[0]\n      const reader = new FileReader()\n      reader.readAsDataURL(image)\n      reader.onload = e => {\n        this.previewImage = e.target.result\n      }\n      this.forms.mainInformation.image = image\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\n.content-block {\n  width: 100%;\n  display: flex;\n  grid-template-columns: 450px 1fr;\n  margin-top: 50px;\n}\n\n.content-block__right{\n  width: 100%;\n}\n\n.tab-content {\n  padding: 40px;\n  width: 100%;\n  height: 400px;\n  border-radius: @border-radius;\n  background: white;\n  box-shadow: @box-shadow;\n}\n\n.avatar__image {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n}\n\n.mainInformation {\n  padding: 40px;\n  width: 100%;\n  height: fit-content;\n  flex-shrink: 0;\n  border-radius: 20px;\n  background: white;\n  box-shadow: 1px 1px 37px 1px rgba(0, 0, 0, 0.08);\n}\n\n.input-rows {\n  width: 100%;\n\n  * {\n    width: 100%;\n  }\n\n  > * {\n    margin-top: 20px;\n  }\n}\n\n.input-row {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.line-input__field {\n  border: none;\n  outline: none;\n  border-bottom: 1px solid rgba(1, 1, 1, 0.20);\n}\n\n.form__inputs {\n  margin: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.form__btns {\n  width: 100%;\n  display: flex;\n  justify-content: end;\n\n  button {\n    width: 200px;\n  }\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}