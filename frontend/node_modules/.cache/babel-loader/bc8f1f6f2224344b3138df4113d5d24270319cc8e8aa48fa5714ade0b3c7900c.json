{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '@/router/router';\nconst API_URL = 'http://localhost:3000/';\nconst axiosInstance = axios.create({\n  baseURL: API_URL\n});\nconst axiosInstancePost = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst axiosInstancePatch = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include'\n});\n\n// Получение услуг других пользователей\nexport async function getServicesApi() {\n  try {\n    const response = await axiosInstance.get('/products');\n    console.log(response.data);\n    // response.data = response.data.map(item => ({\n    //   service: item.element\n    //   author: item.author\n    // }))\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    // alert(err.message)\n    console.log(err);\n  }\n}\nexport async function getServiceByIdApi(id) {\n  try {\n    const response = await axiosInstance.get('/products/' + id);\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    // alert(err.message)\n    console.log(err);\n    await router.push('/notfound');\n\n    // if (err.response.status === 400){\n    // }\n  }\n}\n\n// Создание услуги\nexport async function createServiceApi(payload) {\n  try {\n    const response = await axiosInstancePost.post('products/add', payload); // title, cost, desc\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    // alert(err.message)\n  }\n}\n\nexport async function updateServiceApi(id, payload) {\n  try {\n    const response = await axiosInstancePatch.patch('products/update/' + id, payload);\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    // alert(err.message)\n    await router.push('/services/' + id);\n    throw err;\n  }\n}\nexport async function deleteServiceApi(id) {\n  try {\n    const response = await axiosInstancePost.delete('products/delete/' + id);\n    console.log(response);\n    return response;\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n}\nexport async function getProductsByCategoryApi(category) {\n  try {\n    console.log(category);\n    const response = await axiosInstance.get('/category/products/' + String(category.id));\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n}","map":{"version":3,"names":["axios","router","API_URL","axiosInstance","create","baseURL","axiosInstancePost","withCredentials","credentials","headers","axiosInstancePatch","getServicesApi","response","get","console","log","data","err","getServiceByIdApi","id","push","createServiceApi","payload","post","updateServiceApi","patch","deleteServiceApi","delete","getProductsByCategoryApi","category","String"],"sources":["C:/Users/SAK/Desktop/Обмен услуг/frontend/src/services/services_service.js"],"sourcesContent":["import axios from 'axios'\nimport router from '@/router/router'\n\nconst API_URL = 'http://localhost:3000/'\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL\n})\n\nconst axiosInstancePost = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nconst axiosInstancePatch = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include'\n})\n\n// Получение услуг других пользователей\nexport async function getServicesApi () {\n  try {\n    const response = await axiosInstance.get('/products')\n    console.log(response.data)\n    // response.data = response.data.map(item => ({\n    //   service: item.element\n    //   author: item.author\n    // }))\n    console.log(response.data)\n    return response.data\n  } catch (err){\n    // alert(err.message)\n    console.log(err)\n  }\n}\n\nexport async function getServiceByIdApi (id) {\n  try {\n    const response = await axiosInstance.get('/products/' + id)\n    console.log(response)\n    return response.data\n  } catch (err){\n    // alert(err.message)\n    console.log(err)\n    await router.push('/notfound')\n\n    // if (err.response.status === 400){\n    // }\n  }\n}\n\n// Создание услуги\nexport async function createServiceApi (payload) {\n  try {\n    const response = await axiosInstancePost.post('products/add', payload) // title, cost, desc\n    console.log(response)\n    return response.data\n  } catch (err) {\n    console.log(err)\n    // alert(err.message)\n  }\n}\n\nexport async function updateServiceApi (id, payload) {\n  try {\n    const response = await axiosInstancePatch.patch('products/update/' + id, payload)\n    console.log(response)\n    return response.data\n  } catch (err){\n    console.log(err)\n    // alert(err.message)\n    await router.push('/services/' + id)\n    throw err\n  }\n}\n\nexport async function deleteServiceApi (id) {\n  try {\n    const response = await axiosInstancePost.delete('products/delete/' + id)\n    console.log(response)\n    return response\n  } catch (err) {\n    console.log(err)\n    throw err\n  }\n}\n\nexport async function getProductsByCategoryApi (category) {\n  try {\n    console.log(category)\n    const response = await axiosInstance.get('/category/products/' + String(category.id))\n    console.log(response.data)\n    return response.data\n  } catch (err) {\n    console.log(err)\n    throw err\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}