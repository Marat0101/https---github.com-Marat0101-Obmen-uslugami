{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-47d87237\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"input-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VeeField = _resolveComponent(\"VeeField\");\n  const _component_VeeErrorMessage = _resolveComponent(\"VeeErrorMessage\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_VeeField, {\n    as: \"input\",\n    type: \"time\",\n    value: $data.selectedTime,\n    onInput: _cache[0] || (_cache[0] = $event => $options.updateSelectedTime($event.target.value)),\n    name: $props.name,\n    rules: `required`\n  }, null, 8 /* PROPS */, [\"value\", \"name\"]), _createVNode(_component_VeeErrorMessage, {\n    name: $props.name,\n    class: \"error-feedback\"\n  }, null, 8 /* PROPS */, [\"name\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_VeeField","as","type","value","$data","selectedTime","onInput","_cache","$event","$options","updateSelectedTime","target","name","$props","rules","_component_VeeErrorMessage"],"sources":["C:\\Users\\SAK\\Desktop\\Обмен услуг\\frontend\\src\\components\\UI\\AppTimeInput.vue"],"sourcesContent":["<template>\n  <div class=\"input-group\">\n    <VeeField as=\"input\"\n              type=\"time\"\n              :value=\"selectedTime\"\n              @input=\"updateSelectedTime($event.target.value)\"\n              :name=\"name\"\n              :rules=\"`required`\"\n    >\n    </VeeField>\n    <VeeErrorMessage :name=\"name\" class=\"error-feedback\"></VeeErrorMessage>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AppTimePicker',\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    name: String\n  },\n  data () {\n    return {\n      selectedTime: this.value\n    }\n  },\n  methods: {\n    updateSelectedTime (time) {\n      this.selectedTime = time\n      this.$emit('update:modelValue', time)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.input-group{\n  display: flex;\n  flex-direction: column;\n}\n.time-picker input[type=\"time\"] {\n  height: 40px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  padding: 0;\n  font-family: inherit;\n  font-size: inherit;\n  color: inherit;\n  border-radius: 8px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;;;uBAAxBC,mBAAA,CAUM,OAVNC,UAUM,GATJC,YAAA,CAOWC,mBAAA;IAPDC,EAAE,EAAC,OAAO;IACVC,IAAI,EAAC,MAAM;IACVC,KAAK,EAAEC,KAAA,CAAAC,YAAY;IACnBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,kBAAkB,CAACF,MAAM,CAACG,MAAM,CAACR,KAAK;IAC7CS,IAAI,EAAEC,MAAA,CAAAD,IAAI;IACVE,KAAK,EAAE;8CAGlBf,YAAA,CAAuEgB,0BAAA;IAArDH,IAAI,EAAEC,MAAA,CAAAD,IAAI;IAAEhB,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}