{"ast":null,"code":"import { defineRule, configure, Field, Form, ErrorMessage } from 'vee-validate';\nimport { localize, setLocale } from '@vee-validate/i18n';\nimport AllRules from '@vee-validate/rules';\n\n// import ru from '@vee-validate/i18n/dist/locale/ru.json'\n\nexport default function setupVeeValidate(app) {\n  app.component('VeeField', Field);\n  app.component('VeeForm', Form);\n  app.component('VeeErrorMessage', ErrorMessage);\n  Object.keys(AllRules).forEach(rule => {\n    defineRule(rule, AllRules[rule]);\n  });\n  defineRule('date_format', value => {\n    if (!value || !value.length) {\n      return true;\n    }\n    const regexPattern = /^(0[1-9]|1\\d|2\\d|3[01]):(0[1-9]|1[0-2]):(19|20)\\d{2}$/;\n    if (regexPattern.test(String(value)) || value.length !== 10) {\n      return 'Поле должно иметь формат DD:MM:YYYY.' + value.length;\n    }\n    return true;\n  });\n  configure({\n    generateMessage: localize('ru', {\n      messages: {\n        required: 'Заполните поле.',\n        email: 'Неверный формат почты.',\n        min: field => {\n          return `Поле должно содержать не менее ${field.rule.params[0]} символа(-ов).`;\n        },\n        max: field => {\n          return `Поле должно содержать не более ${field.rule.params[0]} символа(-ов).`;\n        },\n        confirmed: field => {\n          console.log(field);\n          return 'Поля не совпадают.';\n        },\n        integer: 'Введите целое число.'\n      }\n    }),\n    validateOnInput: false,\n    // Валидация при вводе\n    validateOnBlur: false,\n    // Валидация при снятии фокуса\n    validateOnChange: true,\n    // Валидация при изменении значения\n    validateOnModelUpdate: true // Валидация при обновлении модели\n  });\n\n  setLocale('ru');\n}","map":{"version":3,"names":["defineRule","configure","Field","Form","ErrorMessage","localize","setLocale","AllRules","setupVeeValidate","app","component","Object","keys","forEach","rule","value","length","regexPattern","test","String","generateMessage","messages","required","email","min","field","params","max","confirmed","console","log","integer","validateOnInput","validateOnBlur","validateOnChange","validateOnModelUpdate"],"sources":["C:/Users/SAK/Desktop/Обмен услуг/frontend/src/plugins/vee-validate.js"],"sourcesContent":["import { defineRule, configure, Field, Form, ErrorMessage } from 'vee-validate'\nimport { localize, setLocale } from '@vee-validate/i18n'\nimport AllRules from '@vee-validate/rules'\n\n// import ru from '@vee-validate/i18n/dist/locale/ru.json'\n\nexport default function setupVeeValidate (app) {\n  app.component('VeeField', Field)\n  app.component('VeeForm', Form)\n  app.component('VeeErrorMessage', ErrorMessage)\n\n  Object.keys(AllRules).forEach(rule => {\n    defineRule(rule, AllRules[rule])\n  })\n\n  defineRule('date_format', value => {\n    if (!value || !value.length) {\n      return true\n    }\n\n    const regexPattern = /^(0[1-9]|1\\d|2\\d|3[01]):(0[1-9]|1[0-2]):(19|20)\\d{2}$/\n    if (regexPattern.test(String(value)) || value.length !== 10) {\n      return 'Поле должно иметь формат DD:MM:YYYY.' + value.length\n    }\n    return true\n  })\n\n  configure({\n    generateMessage: localize(\n      'ru', {\n        messages: {\n          required: 'Заполните поле.',\n          email: 'Неверный формат почты.',\n          min: (field) => {\n            return `Поле должно содержать не менее ${field.rule.params[0]} символа(-ов).`\n          },\n          max: (field) => {\n            return `Поле должно содержать не более ${field.rule.params[0]} символа(-ов).`\n          },\n          confirmed: (field) => {\n            console.log(field)\n            return 'Поля не совпадают.'\n          },\n          integer: 'Введите целое число.'\n        }\n      }\n    ),\n    validateOnInput: false, // Валидация при вводе\n    validateOnBlur: false, // Валидация при снятии фокуса\n    validateOnChange: true, // Валидация при изменении значения\n    validateOnModelUpdate: true // Валидация при обновлении модели\n  })\n\n  setLocale('ru')\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,YAAY,QAAQ,cAAc;AAC/E,SAASC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AACxD,OAAOC,QAAQ,MAAM,qBAAqB;;AAE1C;;AAEA,eAAe,SAASC,gBAAgBA,CAAEC,GAAG,EAAE;EAC7CA,GAAG,CAACC,SAAS,CAAC,UAAU,EAAER,KAAK,CAAC;EAChCO,GAAG,CAACC,SAAS,CAAC,SAAS,EAAEP,IAAI,CAAC;EAC9BM,GAAG,CAACC,SAAS,CAAC,iBAAiB,EAAEN,YAAY,CAAC;EAE9CO,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC,CAACM,OAAO,CAACC,IAAI,IAAI;IACpCd,UAAU,CAACc,IAAI,EAAEP,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC,CAAC,CAAC;EAEFd,UAAU,CAAC,aAAa,EAAEe,KAAK,IAAI;IACjC,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE;MAC3B,OAAO,IAAI;IACb;IAEA,MAAMC,YAAY,GAAG,uDAAuD;IAC5E,IAAIA,YAAY,CAACC,IAAI,CAACC,MAAM,CAACJ,KAAK,CAAC,CAAC,IAAIA,KAAK,CAACC,MAAM,KAAK,EAAE,EAAE;MAC3D,OAAO,sCAAsC,GAAGD,KAAK,CAACC,MAAM;IAC9D;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EAEFf,SAAS,CAAC;IACRmB,eAAe,EAAEf,QAAQ,CACvB,IAAI,EAAE;MACJgB,QAAQ,EAAE;QACRC,QAAQ,EAAE,iBAAiB;QAC3BC,KAAK,EAAE,wBAAwB;QAC/BC,GAAG,EAAGC,KAAK,IAAK;UACd,OAAQ,kCAAiCA,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,CAAE,gBAAe;QAC/E,CAAC;QACDC,GAAG,EAAGF,KAAK,IAAK;UACd,OAAQ,kCAAiCA,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,CAAE,gBAAe;QAC/E,CAAC;QACDE,SAAS,EAAGH,KAAK,IAAK;UACpBI,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;UAClB,OAAO,oBAAoB;QAC7B,CAAC;QACDM,OAAO,EAAE;MACX;IACF,CACF,CAAC;IACDC,eAAe,EAAE,KAAK;IAAE;IACxBC,cAAc,EAAE,KAAK;IAAE;IACvBC,gBAAgB,EAAE,IAAI;IAAE;IACxBC,qBAAqB,EAAE,IAAI,CAAC;EAC9B,CAAC,CAAC;;EAEF7B,SAAS,CAAC,IAAI,CAAC;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}