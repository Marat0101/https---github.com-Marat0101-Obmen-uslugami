{"ast":null,"code":"import ServiceList from '@/components/services/ServiceList.vue';\nimport { getServicesApi } from '@/services/services_service';\nimport SearchInput from '@/components/UI/SearchInput.vue';\nexport default {\n  components: {\n    SearchInput,\n    ServiceList\n  },\n  data() {\n    return {\n      search: '',\n      serviceCards: []\n    };\n  },\n  mounted() {\n    const searchParam = this.$route.query.search || '';\n    this.search = searchParam.toString();\n    this.fetchServices();\n  },\n  methods: {\n    async fetchServices() {\n      this.serviceCards = await getServicesApi();\n    }\n  },\n  computed: {\n    filteredList() {\n      return this.serviceCards.filter(service => {\n        return service.title.toLowerCase().includes(this.search.toLowerCase());\n      });\n    }\n  }\n};","map":{"version":3,"names":["ServiceList","getServicesApi","SearchInput","components","data","search","serviceCards","mounted","searchParam","$route","query","toString","fetchServices","methods","computed","filteredList","filter","service","title","toLowerCase","includes"],"sources":["C:\\Users\\SAK\\Desktop\\Обмен услуг\\frontend\\src\\pages\\services\\ServiceSearch.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <search-input\n        placeholder=\"Поиск...\"\n        v-model=\"search\"\n        class=\"search-input\"\n      ></search-input>\n    </div>\n    <div>\n      <div style=\"margin-top: 96px;\" v-if=\"filteredList.length > 0\" class=\"content-block\">\n        <service-list class=\"services-list\" :serviceCards=\"filteredList\"></service-list>\n      </div>\n      <div v-else class=\"service-notfound\">\n        <p>По запросу \"{{ this.search }}\" ничего не найдено.</p>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport ServiceList from '@/components/services/ServiceList.vue'\nimport { getServicesApi } from '@/services/services_service'\nimport SearchInput from '@/components/UI/SearchInput.vue'\n\nexport default {\n  components: { SearchInput, ServiceList },\n  data () {\n    return {\n      search: '',\n      serviceCards: []\n    }\n  },\n\n  mounted () {\n    const searchParam = this.$route.query.search || ''\n    this.search = searchParam.toString()\n    this.fetchServices()\n  },\n\n  methods: {\n    async fetchServices () {\n      this.serviceCards = await getServicesApi()\n    }\n  },\n\n  computed: {\n    filteredList () {\n      return this.serviceCards.filter(service => {\n        return service.title.toLowerCase().includes(this.search.toLowerCase())\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\n.search {\n  display: inline-flex;\n  align-items: center;\n  margin-top: 50px;\n  width: 100%;\n  height: fit-content;\n  background: none;\n  justify-content: center;\n  .search-input {\n    margin: 0 auto;\n    width: 60%;\n  }\n}\n\n.content-block {\n  display: flex;\n  justify-content: center;\n}\n\n.services-list {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n}\n.service-notfound{\n  display: flex;\n  color: rgba(1, 1, 1, 0.30);\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  justify-content: center;\n  margin-top: 50px;\n\n  p {\n    font-size: @font-size-medium;\n  }\n}\n</style>\n"],"mappings":"AAoBA,OAAOA,WAAU,MAAO,uCAAsC;AAC9D,SAASC,cAAa,QAAS,6BAA4B;AAC3D,OAAOC,WAAU,MAAO,iCAAgC;AAExD,eAAe;EACbC,UAAU,EAAE;IAAED,WAAW;IAAEF;EAAY,CAAC;EACxCI,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE;IAChB;EACF,CAAC;EAEDC,OAAMA,CAAA,EAAK;IACT,MAAMC,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACL,MAAK,IAAK,EAAC;IACjD,IAAI,CAACA,MAAK,GAAIG,WAAW,CAACG,QAAQ,CAAC;IACnC,IAAI,CAACC,aAAa,CAAC;EACrB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,aAAYA,CAAA,EAAK;MACrB,IAAI,CAACN,YAAW,GAAI,MAAML,cAAc,CAAC;IAC3C;EACF,CAAC;EAEDa,QAAQ,EAAE;IACRC,YAAWA,CAAA,EAAK;MACd,OAAO,IAAI,CAACT,YAAY,CAACU,MAAM,CAACC,OAAM,IAAK;QACzC,OAAOA,OAAO,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACf,MAAM,CAACc,WAAW,CAAC,CAAC;MACvE,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}