{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/';\nconst axiosInstance = axios.create({\n  baseURL: API_URL\n});\nconst axiosWithCookieInstance = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include'\n});\n\n// Обновить аватар\nexport async function inviteEmployeeApi(payload) {\n  try {\n    const response = await axiosWithCookieInstance.post('company/create_employee/' + payload.id, {\n      email: payload.email\n    });\n    console.log(response);\n    return response;\n  } catch (err) {\n    console.log(err);\n    alert(err.response.data.message);\n  }\n}\nexport async function getAllEmployeesApi(idCompany) {\n  try {\n    const response = await axiosInstance.get('company/allEmployee/' + idCompany);\n    console.log(response);\n    return response.data.employee;\n  } catch (err) {\n    console.log(err);\n    alert(err.response.data.message);\n  }\n}\nexport async function checkHashApi(payload) {\n  try {\n    console.log(payload);\n    const response = await axiosInstance.post('company/infoEmployee', payload);\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    alert(err.response.data.message);\n  }\n}\nexport async function registerEmployeeApi(payload) {\n  try {\n    const response = await axiosInstance.patch('company/registerEmployee', payload);\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    alert(err.response.data.message);\n  }\n}\nexport async function fireEmployeeApi(companyId, employeeId) {\n  try {\n    const response = await axiosWithCookieInstance.patch('company/fire_employee/' + companyId, {\n      employeeId\n    });\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n    alert(err.response.data.message);\n  }\n}","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","axiosWithCookieInstance","withCredentials","credentials","inviteEmployeeApi","payload","response","post","id","email","console","log","err","alert","data","message","getAllEmployeesApi","idCompany","get","employee","checkHashApi","registerEmployeeApi","patch","fireEmployeeApi","companyId","employeeId"],"sources":["C:/Users/SAK/Desktop/Обмен услуг/frontend/src/services/companies_service.js"],"sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'http://localhost:3000/'\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL\n})\n\nconst axiosWithCookieInstance = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  credentials: 'include'\n})\n\n// Обновить аватар\nexport async function inviteEmployeeApi (payload) {\n  try {\n    const response = await axiosWithCookieInstance.post('company/create_employee/' + payload.id, {\n      email: payload.email\n    })\n    console.log(response)\n    return response\n  } catch (err) {\n    console.log(err)\n    alert(err.response.data.message)\n  }\n}\nexport async function getAllEmployeesApi (idCompany) {\n  try {\n    const response = await axiosInstance.get('company/allEmployee/' + idCompany)\n    console.log(response)\n    return response.data.employee\n  } catch (err) {\n    console.log(err)\n    alert(err.response.data.message)\n  }\n}\n\nexport async function checkHashApi (payload) {\n  try {\n    console.log(payload)\n    const response = await axiosInstance.post('company/infoEmployee', payload)\n    console.log(response)\n    return response.data\n  } catch (err) {\n    console.log(err)\n    alert(err.response.data.message)\n  }\n}\n\nexport async function registerEmployeeApi (payload) {\n  try {\n    const response = await axiosInstance.patch('company/registerEmployee', payload)\n    console.log(response)\n    return response.data\n  } catch (err) {\n    console.log(err)\n    alert(err.response.data.message)\n  }\n}\nexport async function fireEmployeeApi (companyId, employeeId) {\n  try {\n    const response = await axiosWithCookieInstance.patch('company/fire_employee/' + companyId, {\n      employeeId\n    })\n    console.log(response)\n    return response.data\n  } catch (err) {\n    console.log(err)\n    alert(err.response.data.message)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}