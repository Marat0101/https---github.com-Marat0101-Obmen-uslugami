{"ast":null,"code":"import { useStore } from 'vuex';\nimport AppInput from '@/components/UI/AppInput.vue';\nimport AppForm from '@/components/AppForm.vue';\nimport AppPrimaryBtn from '@/components/UI/AppPrimaryButton.vue';\nimport InputRows from '@/components/UI/InputRows.vue';\nimport TheCard from '@/components/TheCard.vue';\nimport { ref } from 'vue';\nimport AppSwitch from '@/components/UI/AppSwitch.vue';\nexport default {\n  components: {\n    AppSwitch,\n    TheCard,\n    InputRows,\n    AppPrimaryBtn,\n    AppForm,\n    AppInput\n  },\n  setup() {\n    const store = useStore();\n    const selectedChecks = ref([]);\n    const form = ref({\n      name: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      isCompany: false\n    });\n    const submitForm = () => {\n      const payload = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password,\n        isCompany: form.value.isCompany\n      };\n      store.dispatch('auth/register', payload);\n    };\n    return {\n      selectedChecks,\n      form,\n      submitForm\n    };\n  }\n};","map":{"version":3,"names":["useStore","AppInput","AppForm","AppPrimaryBtn","InputRows","TheCard","ref","AppSwitch","components","setup","store","selectedChecks","form","name","email","password","password_confirm","isCompany","submitForm","payload","value","dispatch"],"sources":["C:\\Users\\SAK\\Desktop\\Обмен услуг\\frontend\\src\\pages\\auth\\RegisterPage.vue"],"sourcesContent":["<template>\n  <TheCard image-name=\"reg_form_img.png\">\n      <AppForm @submit=\"submitForm\">\n        <h3>RECORDUM</h3>\n        <h1 style=\"margin: 40px 0;\">Регистрация</h1>\n\n        <InputRows>\n          <div class=\"input-row\">\n            <AppInput v-model=\"form.name\"\n                      :type=\"`text`\"\n                      :name=\"`name`\"\n                      :rules=\"`required|max:35`\"\n                      :placeholder=\"`Имя`\">\n            </AppInput>\n          </div>\n\n          <div class=\"input-row\">\n            <AppInput v-model=\"form.email\"\n                      :type=\"`text`\"\n                      :name=\"`email`\"\n                      :rules=\"`required|email`\"\n                      :placeholder=\"`Email`\">\n            </AppInput>\n          </div>\n\n          <div class=\"input-row\">\n            <AppInput v-model=\"form.password\"\n                      :type=\"`password`\"\n                      :name=\"`password`\"\n                      :rules=\"`required|min:6`\"\n                      :placeholder=\"`Пароль`\">\n            </AppInput>\n          </div>\n\n          <div class=\"input-row\">\n            <AppInput v-model=\"form.password_confirm\"\n                      :type=\"`password`\"\n                      :name=\"`password_confirm`\"\n                      :rules=\"`required|confirmed:@password`\"\n                      :placeholder=\"`Потверждение пароля`\">\n            </AppInput>\n          </div>\n\n          <div class=\"input-row\" style=\"margin-top: 40px;\">\n            <AppSwitch v-model=\"form.isCompany\" id=\"isCompany\">\n              Зарегистрироваться как компания</AppSwitch>\n          </div>\n\n        </InputRows>\n\n        <AppPrimaryBtn\n          style=\"margin-top: 30px;\"\n          type=\"submit\">\n          Зарегистрироваться\n        </AppPrimaryBtn>\n        <p style=\"text-align: center; margin-top: 40px;\">Уже есть аккаунт?\n          <router-link class=\"colored-link\" to=\"/login\">Войдите</router-link>\n        </p>\n      </AppForm>\n  </TheCard>\n\n</template>\n\n<script>\nimport { useStore } from 'vuex'\nimport AppInput from '@/components/UI/AppInput.vue'\nimport AppForm from '@/components/AppForm.vue'\nimport AppPrimaryBtn from '@/components/UI/AppPrimaryButton.vue'\nimport InputRows from '@/components/UI/InputRows.vue'\nimport TheCard from '@/components/TheCard.vue'\nimport { ref } from 'vue'\nimport AppSwitch from '@/components/UI/AppSwitch.vue'\n\nexport default {\n  components: { AppSwitch, TheCard, InputRows, AppPrimaryBtn, AppForm, AppInput },\n  setup () {\n    const store = useStore()\n\n    const selectedChecks = ref([])\n\n    const form = ref({\n      name: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      isCompany: false\n    })\n\n    const submitForm = () => {\n      const payload = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password,\n        isCompany: form.value.isCompany\n      }\n      store.dispatch('auth/register', payload)\n    }\n\n    return {\n      selectedChecks,\n      form,\n      submitForm\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\nform {\n  width: 400px;\n}\n</style>\n"],"mappings":"AAgEA,SAASA,QAAO,QAAS,MAAK;AAC9B,OAAOC,QAAO,MAAO,8BAA6B;AAClD,OAAOC,OAAM,MAAO,0BAAyB;AAC7C,OAAOC,aAAY,MAAO,sCAAqC;AAC/D,OAAOC,SAAQ,MAAO,+BAA8B;AACpD,OAAOC,OAAM,MAAO,0BAAyB;AAC7C,SAASC,GAAE,QAAS,KAAI;AACxB,OAAOC,SAAQ,MAAO,+BAA8B;AAEpD,eAAe;EACbC,UAAU,EAAE;IAAED,SAAS;IAAEF,OAAO;IAAED,SAAS;IAAED,aAAa;IAAED,OAAO;IAAED;EAAS,CAAC;EAC/EQ,KAAIA,CAAA,EAAK;IACP,MAAMC,KAAI,GAAIV,QAAQ,CAAC;IAEvB,MAAMW,cAAa,GAAIL,GAAG,CAAC,EAAE;IAE7B,MAAMM,IAAG,GAAIN,GAAG,CAAC;MACfO,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE;IACb,CAAC;IAED,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvB,MAAMC,OAAM,GAAI;QACdN,IAAI,EAAED,IAAI,CAACQ,KAAK,CAACP,IAAI;QACrBC,KAAK,EAAEF,IAAI,CAACQ,KAAK,CAACN,KAAK;QACvBC,QAAQ,EAAEH,IAAI,CAACQ,KAAK,CAACL,QAAQ;QAC7BE,SAAS,EAAEL,IAAI,CAACQ,KAAK,CAACH;MACxB;MACAP,KAAK,CAACW,QAAQ,CAAC,eAAe,EAAEF,OAAO;IACzC;IAEA,OAAO;MACLR,cAAc;MACdC,IAAI;MACJM;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}