{"ast":null,"code":"import { computed, onBeforeUpdate, onMounted, ref } from 'vue';\nimport { getAllEmployeesApi } from '@/services/companies_service';\nexport default function useCompanyEmployees(companyId) {\n  const companyEmployees = ref([]);\n  const fetching = async () => {\n    try {\n      const responseData = await getAllEmployeesApi(companyId);\n      companyEmployees.value = responseData.filter(employee => employee.role !== 'Leader');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  onMounted(fetching);\n  onBeforeUpdate(fetching);\n  const currentEmployees = computed(() => {\n    return companyEmployees.value.filter(employee => employee.name !== null);\n  });\n  const employeesSearchQuery = ref('');\n  const searchedEmployees = computed(() => {\n    return currentEmployees.value.filter(employee => employee.name.toLocaleLowerCase().includes(employeesSearchQuery.value.toLocaleLowerCase()) || employee.email.toLocaleLowerCase().includes(employeesSearchQuery.value.toLocaleLowerCase()));\n  });\n  const currentInvites = computed(() => {\n    return companyEmployees.value.filter(employee => employee.name === null);\n  });\n  const inviteSearchQuery = ref('');\n  const searchedInvites = computed(() => {\n    return currentInvites.value.filter(invite => invite.email.toLocaleLowerCase().includes(inviteSearchQuery.value.toLocaleLowerCase()));\n  });\n  return {\n    fetching,\n    currentEmployees,\n    employeesSearchQuery,\n    searchedEmployees,\n    currentInvites,\n    inviteSearchQuery,\n    searchedInvites\n  };\n}","map":{"version":3,"names":["computed","onBeforeUpdate","onMounted","ref","getAllEmployeesApi","useCompanyEmployees","companyId","companyEmployees","fetching","responseData","value","filter","employee","role","err","console","log","currentEmployees","name","employeesSearchQuery","searchedEmployees","toLocaleLowerCase","includes","email","currentInvites","inviteSearchQuery","searchedInvites","invite"],"sources":["C:/Users/SAK/Desktop/Обмен услуг/frontend/src/hooks/companies/useCompanyEmployees.js"],"sourcesContent":["import { computed, onBeforeUpdate, onMounted, ref } from 'vue'\nimport { getAllEmployeesApi } from '@/services/companies_service'\n\nexport default function useCompanyEmployees (companyId) {\n  const companyEmployees = ref([])\n  const fetching = async () => {\n    try {\n      const responseData = await getAllEmployeesApi(companyId)\n      companyEmployees.value = responseData.filter(employee => employee.role !== 'Leader')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  onMounted(fetching)\n  onBeforeUpdate(fetching)\n\n  const currentEmployees = computed(() => {\n    return companyEmployees.value.filter(employee => employee.name !== null)\n  })\n\n  const employeesSearchQuery = ref('')\n  const searchedEmployees = computed(() => {\n    return currentEmployees.value.filter(employee =>\n      (employee.name.toLocaleLowerCase().includes(employeesSearchQuery.value.toLocaleLowerCase()) ||\n      employee.email.toLocaleLowerCase().includes(employeesSearchQuery.value.toLocaleLowerCase())\n      )\n    )\n  })\n\n  const currentInvites = computed(() => {\n    return companyEmployees.value.filter(employee => employee.name === null)\n  })\n\n  const inviteSearchQuery = ref('')\n  const searchedInvites = computed(() => {\n    return currentInvites.value.filter(invite =>\n      (invite.email.toLocaleLowerCase().includes(inviteSearchQuery.value.toLocaleLowerCase()))\n    )\n  })\n\n  return {\n    fetching, currentEmployees, employeesSearchQuery, searchedEmployees, currentInvites, inviteSearchQuery, searchedInvites\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,cAAc,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAC9D,SAASC,kBAAkB,QAAQ,8BAA8B;AAEjE,eAAe,SAASC,mBAAmBA,CAAEC,SAAS,EAAE;EACtD,MAAMC,gBAAgB,GAAGJ,GAAG,CAAC,EAAE,CAAC;EAChC,MAAMK,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAML,kBAAkB,CAACE,SAAS,CAAC;MACxDC,gBAAgB,CAACG,KAAK,GAAGD,YAAY,CAACE,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,KAAK,QAAQ,CAAC;IACtF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAEDZ,SAAS,CAACM,QAAQ,CAAC;EACnBP,cAAc,CAACO,QAAQ,CAAC;EAExB,MAAMS,gBAAgB,GAAGjB,QAAQ,CAAC,MAAM;IACtC,OAAOO,gBAAgB,CAACG,KAAK,CAACC,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACM,IAAI,KAAK,IAAI,CAAC;EAC1E,CAAC,CAAC;EAEF,MAAMC,oBAAoB,GAAGhB,GAAG,CAAC,EAAE,CAAC;EACpC,MAAMiB,iBAAiB,GAAGpB,QAAQ,CAAC,MAAM;IACvC,OAAOiB,gBAAgB,CAACP,KAAK,CAACC,MAAM,CAACC,QAAQ,IAC1CA,QAAQ,CAACM,IAAI,CAACG,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAACH,oBAAoB,CAACT,KAAK,CAACW,iBAAiB,CAAC,CAAC,CAAC,IAC3FT,QAAQ,CAACW,KAAK,CAACF,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAACH,oBAAoB,CAACT,KAAK,CAACW,iBAAiB,CAAC,CAAC,CAE5F,CAAC;EACH,CAAC,CAAC;EAEF,MAAMG,cAAc,GAAGxB,QAAQ,CAAC,MAAM;IACpC,OAAOO,gBAAgB,CAACG,KAAK,CAACC,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACM,IAAI,KAAK,IAAI,CAAC;EAC1E,CAAC,CAAC;EAEF,MAAMO,iBAAiB,GAAGtB,GAAG,CAAC,EAAE,CAAC;EACjC,MAAMuB,eAAe,GAAG1B,QAAQ,CAAC,MAAM;IACrC,OAAOwB,cAAc,CAACd,KAAK,CAACC,MAAM,CAACgB,MAAM,IACtCA,MAAM,CAACJ,KAAK,CAACF,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAACG,iBAAiB,CAACf,KAAK,CAACW,iBAAiB,CAAC,CAAC,CACxF,CAAC;EACH,CAAC,CAAC;EAEF,OAAO;IACLb,QAAQ;IAAES,gBAAgB;IAAEE,oBAAoB;IAAEC,iBAAiB;IAAEI,cAAc;IAAEC,iBAAiB;IAAEC;EAC1G,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}